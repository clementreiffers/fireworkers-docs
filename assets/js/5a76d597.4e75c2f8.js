"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[383],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(r),d=o,f=p["".concat(c,".").concat(d)]||p[d]||k[d]||a;return r?n.createElement(f,i(i({ref:t},s),{},{components:r})):n.createElement(f,i({ref:t},s))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5379:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>k,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:2},i="Architecture",l={unversionedId:"the-architecture",id:"the-architecture",title:"Architecture",description:"Installation",source:"@site/docs/the-architecture.md",sourceDirName:".",slug:"/the-architecture",permalink:"/octo-workers-docs/docs/the-architecture",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/octo-workers-docs/docs/intro"},next:{title:"Required Tools",permalink:"/octo-workers-docs/docs/tools-needed"}},c={},u=[{value:"Installation",id:"installation",level:2},{value:"Setup the Architecture",id:"setup-the-architecture",level:3},{value:"Install FakeCfApi",id:"install-fakecfapi",level:3},{value:"Usage",id:"usage",level:2},{value:"How it works",id:"how-it-works",level:2}],s={toc:u},p="wrapper";function k(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"architecture"},"Architecture"),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("h3",{id:"setup-the-architecture"},"Setup the Architecture"),(0,o.kt)("p",null,"The entire project runs on Kubernetes, so you need to install all the necessary components before using it."),(0,o.kt)("p",null,"To begin, clone this GitHub repository: ",(0,o.kt)("inlineCode",{parentName:"p"},"git clone https://github.com/clementreiffers/CfKubernetesArch.git")),(0,o.kt)("p",null,"Next, execute the following commands: ",(0,o.kt)("inlineCode",{parentName:"p"},"cd CfKubernetesArch && make deploy")),(0,o.kt)("p",null,"This will create all the required resources for using this architecture."),(0,o.kt)("h3",{id:"install-fakecfapi"},"Install FakeCfApi"),(0,o.kt)("p",null,"The FakeCfApi is essential if you want to use the Wrangler CLI within this architecture."),(0,o.kt)("p",null,"Run: ",(0,o.kt)("inlineCode",{parentName:"p"},"kubectl apply -f https://raw.githubusercontent.com/clementreiffers/fake-cf-api/main/kubernetes/fake-cf-api.yaml")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"Once installed, you can create your first account on Octo Worker."),(0,o.kt)("p",null,"Run: ",(0,o.kt)("inlineCode",{parentName:"p"},"kubectl apply -f https://raw.githubusercontent.com/clementreiffers/CfKubernetesArch/main/config/samples/api_v1_workeraccount.yaml")),(0,o.kt)("p",null,"It will apply this following resource :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-Yaml"},'apiVersion: api.cf-worker/v1\nkind: WorkerAccount\nmetadata:\n  labels:\n    app.kubernetes.io/name: workeraccount\n    app.kubernetes.io/instance: workeraccount-sample\n    app.kubernetes.io/part-of: workerbundle\n    app.kubernetes.io/managed-by: kustomize\n    app.kubernetes.io/created-by: workerbundle\n  name: "398803b74bcdb1b454434669bc634190" # account\nspec:\n  workerBundleName: worker-bundle-name\n  workerReleaseSelector:\n    matchLabels:\n      accounts: "1234"\n  podTemplate:\n    imagePullSecret: "insert-secret-here"\n')),(0,o.kt)("p",null,"you can change the ",(0,o.kt)("inlineCode",{parentName:"p"},"workerBundleName")," and the WorkerAccount's name as you want!"),(0,o.kt)("h2",{id:"how-it-works"},"How it works"),(0,o.kt)("p",null,"The entire architecture works with Kubernetes Operators.\nThey will operate following this graph:"),(0,o.kt)("mermaid",{value:"flowchart LR\n    subgraph Kubernetes \n        FakeCfApi\n        WorkerBundle\n        WorkerVersion\n        WorkerAccount\n        JobBuilder\n        WorkerRelease\n        Deployment\n    end\n    \n    admin --\x3e |Manage Deployment| FakeCfApi\n    client --\x3e |HTTP| Deployment\n    \n    FakeCfApi --\x3e WorkerVersion \n    FakeCfApi --\x3e BucketS3[(Bucket S3)]\n    WorkerVersion --\x3e WorkerRelease \n    WorkerRelease --\x3e JobBuilder\n    BucketS3 --\x3e JobBuilder \n    JobBuilder --\x3e Registry \n    WorkerAccount --\x3e WorkerBundle \n    WorkerBundle --\x3e Deployment \n    Registry --\x3e Deployment \n    JobBuilder --\x3e WorkerBundle "}))}k.isMDXComponent=!0}}]);